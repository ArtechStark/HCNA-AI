#coding:utf-8
import tensorflow as tf 
import numpy as np 

'''
核心公式：
y = W * x + b + noise 
主要是利用TensorFlow实现简单的线性回归模型
'''
x = tf.placeholder(shape=[None],dtype=tf.float32,name='x')
W = tf.get_variable(shape=[],name='W')
b = tf.get_variable(shape=[],name='b')
y = W * x + b 
x_in = [3]
y_in = [2]

loss = tf.reduce_mean(tf.square(y-y_in))
optimizer = tf.train.GradientDescentOptimizer(0.5)
train = optimizer.minimize(loss)

with tf.Session() as sess:
	sess.run(tf.global_variables_initializer())
	for i in range(1000):
		sess.run(train,feed_dict={x:x_in,y:y_in})
	print sess.run(W)
	print sess.run(b)
